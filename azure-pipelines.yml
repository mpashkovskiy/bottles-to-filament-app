trigger:
- master

stages:
- stage: Build_Packages
  jobs:
  - job: Build
    strategy:
      matrix:
        # linux:
        #   imageName: 'ubuntu-16.04'
        # mac:
        #   imageName: 'macos-10.13'
        windows:
          imageName: 'vs2017-win2016'

    pool:
      vmImage: $(imageName)

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '2.7'
        addToPath: true
        architecture: 'x64'
      displayName: 'Install Python (on Windows only)'
      condition: eq(variables['Agent.OS'], 'Windows_NT')

    - script: |
        npm install --global --production windows-build-tools
      displayName: 'Install windows-build-tools (on Windows only)'
      condition: eq(variables['Agent.OS'], 'Windows_NT')

    - script: |
        npm install
        npm run make
      displayName: 'Build'

    - task: CopyFiles@2
      inputs:
        contents: 'out/make/**'
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: 'packages' 

- stage: Publish_Packages
  jobs:
  - job: Release
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
    - task: GitHubRelease@1
      inputs:
        gitHubConnection: 'GitHubReleaseConnection'
        repositoryName: '$(Build.Repository.Name)'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'gitTag'
        assets: '$(Build.ArtifactStagingDirectory)/**/*'
        changeLogCompareToRelease: 'lastFullRelease'
        changeLogType: 'commitBased'
